/* eslint-disable no-param-reassign */
import { createSlice } from '@reduxjs/toolkit';
import { produce } from 'immer';

// create initialState (generally an empty state) for this slice
const initialState = {
  authToken: null,
  authTokenExpires: null,
  refreshToken: null,
  refreshTokenExpires: null,
  user: null,
};

// create a slice for the counter feature using createSlice from redux toolkit
const authSlice = createSlice({
  name: 'auth', // a unique name for the slice
  initialState, // the initial state for the slice
  reducers: {
    authenticationSuccess(state, action) {
      return produce(state, (draft) => {
        draft.authToken = action.payload.tokens.access.token;
        draft.authTokenExpires = action.payload.tokens.access.expires;
        draft.refreshToken = action.payload.tokens.refresh.token;
        draft.refreshTokenExpires = action.payload.tokens.refresh.expires;
        draft.user = action.payload.user;
      });
    },
    logout(state) {
      return produce(state, (draft) => {
        draft.authToken = null;
        draft.authTokenExpires = null;
        draft.refreshToken = null;
        draft.refreshTokenExpires = null;
        draft.user = null;
      });
    },
  },
});

// export the actions generated by createSlice for this slice
export const { authenticationSuccess, logout } = authSlice.actions;

// export the reducer function as default export for this slice
export default authSlice.reducer;
